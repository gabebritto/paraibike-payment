{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel RESTful API Project with JWT",
        "contact": {
            "name": "Gabriel Souto | @gabebritto"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://rest.localhost/api/",
            "description": "Learning env"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in",
                "description": "Returns the JWT token",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "default": "Successfully authenticated"
                                        },
                                        "data": {
                                            "default": "Token data json"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Invalid Credentials"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out",
                "description": "Returns a message related to action",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "default": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Invalid Credentials"
                    },
                    "404": {
                        "description": "Not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "default": "You are not logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get list of books",
                "description": "Returns list of books",
                "operationId": "getBooksList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Store new book",
                "description": "Returns stored book data",
                "operationId": "storeBook",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "publication_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "available_qty",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/books/{book}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get book information",
                "description": "Returns book data",
                "operationId": "getBookById",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "Book id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update existing book",
                "description": "Returns updated book data",
                "operationId": "updateBook",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "Book id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "default": "Book updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete book",
                "description": "Deletes book",
                "operationId": "deleteBook",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "Book id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Book deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BookRequest": {
                "title": "Book request",
                "description": "Book request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Book name",
                        "format": "string",
                        "example": "Wonderland"
                    },
                    "publication_date": {
                        "title": "publication_date",
                        "description": "Book publication date in string",
                        "format": "string",
                        "example": "2020-03-10"
                    },
                    "available_qty": {
                        "title": "available_qty",
                        "description": "Remaining books count",
                        "format": "string",
                        "example": "10"
                    }
                },
                "type": "object"
            },
            "BookResource": {
                "title": "BookResource",
                "description": "Book resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Book"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BookResource"
                }
            },
            "Book": {
                "title": "Book",
                "description": "Book model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "format": "int64",
                        "default": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "Name",
                        "format": "string"
                    },
                    "publication_date": {
                        "title": "publication_date",
                        "description": "Publication date",
                        "format": "string"
                    },
                    "available_qty": {
                        "title": "available_qty",
                        "description": "Available Quantity",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Book"
                }
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}